List<T> - обобщенный список
Плюсы: нет необходимости создавать новый список для расширения, в отличие от массива
Минусы: Невысокая скорость доступа по значению, вставки в произвольное место, удаления.
Примеры использования: любые списки однотипных объектов и т.д. обновляемые в Update

HashSet<T> - неупорядоченная коллекция уникальных элементов.
Плюсы:  Высокая скорость доступа по значению, вставки в произвольное место, удаления.
Плюсы и минусы: Хранит только уникальные элементы.
Примеры использования: список игроков в сетевой игре

ObservableCollection<T> - обобщенная коллекция с событиями на изменение коллекции.
Плюсы Имеет методы, отслеживающие изменение списка.
Примеры использования: Работа с UI, например появление нового объекта в игре, о котором нужно сообщить игроку и т.д.

LinkedList<T> - двусвязный список
Плюсы : Хранит ссылки на предыдущий и следующий элемент списка. Высокая скорость вставки в произвольное место, удаления.
Минусы : Не имеет доступа по индексу, нет доступа по значению.
Примеры использования: если нужно обработать что-то в соответствующем порядке

Dictionary<TKey, TValue> - словарь
Плюсы : Хранит соответствие значений уникальным ключам. Быстрый доступ по ключу.
Минусы : Ключ должен быть неизменным
Примеры использования: какие-то объекты, к которым удобно добавить уникальные ключи.

Queue<T> - очередь
плюсы : FIFO
минусы : Нет произвольного доступа
Примеры использования: очередь из команд, которые должны исполнится в определенной последовательности

Stack<T> - стэк
Плюсы : LIFO
Минусы : Нет произвольного доступа
Примеры использования: исполненные команды, помещенные в стэк, можно отменять корректном порядке